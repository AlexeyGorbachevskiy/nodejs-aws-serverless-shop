service: import-service
frameworkVersion: '2'

useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  environment:
    IMPORT_BUCKET: ${env:IMPORT_BUCKET}
    SQS_URL: ${cf:product-service-dev.sqsUrl}

  iamRoleStatements:
    - Effect: "Allow"
      Action: "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::node-in-aws-import-service"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::node-in-aws-import-service/*"
    - Effect: "Allow"
      Action: "sqs:*"
      Resource: ${cf:product-service-dev.sqsArn}
#        - Fn::GetAtt: ['${cf:product-service-dev.sqsArn}', Arn]

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

package:
  individually: true

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          authorizer:
            name: basicAuthorizer
            arn: "${cf:authorization-service-dev.basicAuthorizerArn}"
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: token
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: ${env:IMPORT_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true



resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        ResponseType: DEFAULT_4XX
        RestApiId: !Ref ApiGatewayRestApi
    GatewayResponseAccessDeied:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        ResponseType: ACCESS_DENIED
        RestApiId: !Ref ApiGatewayRestApi
    GatewayResponseUnauthorized:
      Type: AWS::ApiGateway::GatewayResponse
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
          gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
        ResponseType: UNAUTHORIZED
        RestApiId: !Ref ApiGatewayRestApi
