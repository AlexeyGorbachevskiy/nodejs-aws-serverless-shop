service: authorization-service
frameworkVersion: '2'

useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  apiGateway:
    minimumCompressionSize: 1024
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    AlexeyGorbachevskiy: ${env:AlexeyGorbachevskiy}


plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true

package:
  individually: true

functions:
  basicAuthorizer:
    handler: handler.basicAuthorizer
    events:
      - http:
          path: token
          method: get
          cors: true



resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId: !Ref ApiGatewayRestApi

  Outputs:
    basicAuthorizerArn:
      Value:
        Fn::GetAtt: [BasicAuthorizerLambdaFunction, Arn]
